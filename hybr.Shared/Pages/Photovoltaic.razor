@page "/Photovoltaic"

@using hybr.Shared.Services
<PageTitle>Photovoltaic</PageTitle>
<Preload />
<div id="parent">
    <div id="grid11" class="gridContent">
        <LineChart @ref=LiveChartElement.PhotovoltaicChartVoltage1 Width="100" WidthUnit="Unit.Percentage" Height="100" HeightUnit="Unit.Percentage" />
    </div>
    <div id="grid21" class="gridContent">
        <LineChart @ref=LiveChartElement.PhotovoltaicChartAmperage1 Width="100" WidthUnit="Unit.Percentage" Height="100" HeightUnit="Unit.Percentage" />
    </div>
    <div id="grid31" class="gridContent">
        <LineChart @ref=LiveChartElement.PhotovoltaicChartVoltage2 Width="100" WidthUnit="Unit.Percentage" Height="100" HeightUnit="Unit.Percentage" />
    </div>
    <div id="grid12" class="gridContent">
        <LineChart @ref=LiveChartElement.PhotovoltaicChartAmperage2 Width="100" WidthUnit="Unit.Percentage" Height="100" HeightUnit="Unit.Percentage" />
    </div>
    <div id="grid22" class="gridContent">
        <LineChart @ref=LiveChartElement.PhotovoltaicChartVoltage3 Width="100" WidthUnit="Unit.Percentage" Height="100" HeightUnit="Unit.Percentage" />
    </div>
    <div id="grid32" class="gridContent">
        <LineChart @ref=LiveChartElement.PhotovoltaicChartAmperage3 Width="100" WidthUnit="Unit.Percentage" Height="100" HeightUnit="Unit.Percentage" />
    </div>
</div>

@code {
    [Inject] protected PreloadService PreloadService { get; set; } = default!;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            LiveChartElement.PageProperty("Photovoltaic");
            PreloadService.Show(SpinnerColor.Light, "Синхронизация...");
            await Task.Delay(1300);
            PreloadService.Hide();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}